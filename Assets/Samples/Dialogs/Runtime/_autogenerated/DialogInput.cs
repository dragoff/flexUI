/////////////////////////////////////////
// === THIS IS AUTOGENERATED CODE ===  //
/////////////////////////////////////////
using System;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;
using FlexUI;

namespace FlexUI.Dialogs
{
    public partial class DialogInput : FlexUI.BaseView //Autogenerated
    {
        public static DialogInput Instance { get; private set; }
        // Controls
        #pragma warning disable 0414
        [Header("Controls (auto capture)")]
        [AutoGenerated, SerializeField] protected TMPro.TextMeshProUGUI MessageText = default;
        [AutoGenerated, SerializeField] protected UnityEngine.RectTransform BottomPanel = default;
        [AutoGenerated, SerializeField] protected UnityEngine.UI.Button CancelButton = default;
        [AutoGenerated, SerializeField] protected TMPro.TextMeshProUGUI cancelText = default;
        [AutoGenerated, SerializeField] protected UnityEngine.UI.Button OkButton = default;
        [AutoGenerated, SerializeField] protected TMPro.TextMeshProUGUI okText = default;
        [AutoGenerated, SerializeField] protected TMPro.TMP_InputField InputFieldTMP = default;
        [AutoGenerated, SerializeField] protected UnityEngine.RectTransform TextArea = default;
        [AutoGenerated, SerializeField] protected TMPro.TextMeshProUGUI Placeholder = default;
        [AutoGenerated, SerializeField] protected TMPro.TextMeshProUGUI Text = default;
        #pragma warning restore 0414
        
        protected override void AutoInit()
        {
            Instance = this;
        }
        
        protected override void AutoSubscribe()
        {
            SubscribeOnChanged(MessageText);
            SubscribeOnChanged(BottomPanel);
            SubscribeOnChanged(CancelButton);
            SubscribeOnChanged(cancelText);
            SubscribeOnChanged(OkButton);
            SubscribeOnChanged(okText);
            SubscribeOnChanged(InputFieldTMP);
            SubscribeOnChanged(TextArea);
            SubscribeOnChanged(Placeholder);
            SubscribeOnChanged(Text);
        }
        #region Static Methods
        public static void ShowInstance() => Instance.Show();
        public static void HideInstance() => Instance.Hide();
        #endregion
    }
}